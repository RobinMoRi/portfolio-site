services:
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolio-frontend
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=dev

  frontend-dev-v2:
    build:
      context: ./portfolio-frontend
      dockerfile: Dockerfile.dev
    container_name: vhk-frontend-dev-v2
    volumes:
      - ./portfolio-frontend:/app
      - ./portfolio-frontend/node_modules:/app/node_modules
    ports:
      - "8000:3000"
    environment:
      - ENVIRONMENT=dev

  redis-dev:
    image: redis/redis-stack:latest
    container_name: portfolio-redis
    restart: always
    ports:
      - "6380:6380" # redis stack server
      - "8002:8001" # redis insights
    volumes:
      - ./backend/redis/d–∞ta:/root/redis
      - ./backend/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=rzCTybHG&HJib5xy #TODO: fix password
      - REDIS_PORT=6380
      - REDIS_DATABASES=16

  frontend-deploy:
    build:
      context: .
      dockerfile: Deploy.Dockerfile
    container_name: portfolio-frontend-prod
    ports:
      - "80:80"
    environment:
      - NODE_ENV=prod
      - GITHUB_API_TOKEN=sometokenhere

  frontend-deploy-v2:
    build:
      context: ./portfolio-frontend
      dockerfile: Deploy.Dockerfile
    container_name: portfolio-frontend-prod-v2
    ports:
      - "80:8000"
    environment:
      - NODE_ENV=prod

  api-dev:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: portfolio-api-dev
    ports:
      - "8080:8080"
    env_file:
      - ./api/.env
    volumes:
      - ./api:/app

  api-prod:
    build:
      context: ./api
      dockerfile: Deploy.Dockerfile
    container_name: portfolio-api-prod
    ports:
      - "8080:8080"
    environment:
      # Define environment variables here, or better, use a secret management approach
      ENV: prod
    restart: unless-stopped